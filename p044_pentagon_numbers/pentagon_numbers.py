# Pentagon numbers
# Problem 44

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
# pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70
# − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of
# D?

import time

def pentagonal(n):
  return n * (3 * n - 1) / 2

assert pentagonal(1) == 1
assert pentagonal(4) == 22
assert pentagonal(7) == 70
assert pentagonal(8) == 92

def is_pentagonal(n):
  if n == 0:
    return False
  i = int(1 + ((24 * n + 1) ** 0.5) / 6)
  return pentagonal(i) == n

def pentagonal_pair():
  p = Pentagonal()
  b = 0
  while True:
    b += 1
    Pb = pentagonal(b)
    a = 0
    while a < b:
      a += 1
      Pa = pentagonal(a)
      if is_pentagonal(Pb - Pa) and is_pentagonal(Pb + Pa):
        print(a, b)
        return Pb - Pa

t0 = time.time()
result = pentagonal_pair()
t1 = time.time()
print(result)
print('time %f' % (t1 - t0))
# (1020, 2167)
# 5482660
# time 1.783577
