# Triangular, pentagonal, and hexagonal
# Problem 45

# Triangle, pentagonal, and hexagonal numbers are generated by the following
# formulae:

# Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
# Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
# Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.

# Find the next triangle number that is also pentagonal and hexagonal.

import time

def triangular(n):
  return n * (n + 1) / 2

def pentagonal(n):
  return n * (3 * n - 1) / 2

def hexagonal(n):
  return n * (2 * n - 1)

def triangular_sequence():
  i = 1
  while True:
    yield triangular(i)
    i += 1

def pentagonal_sequence():
  i = 1
  while True:
    yield pentagonal(i)
    i += 1

def hexagonal_sequence():
  i = 1
  while True:
    yield hexagonal(i)
    i += 1

def tph(n):
  ts = triangular_sequence()
  ps = pentagonal_sequence()
  hs = hexagonal_sequence()
  t = 0
  p = 0
  h = 0
  i = 0
  while i < n:
    # Break symmetry by advancing one of the sequences.
    t = next(ts)
    while not (t == p == h):
      m = max(t, p, h)
      while t < m:
        t = next(ts)
      while p < m:
        p = next(ps)
      while h < m:
        h = next(hs)
    i += 1
  return t

t0 = time.time()
result = tph(3)
t1 = time.time()
print(result)
print('time %f' % (t1 - t0))
# 1533776805
# time 0.050072
